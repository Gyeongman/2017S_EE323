20150073 Kim Gyeong Man  
Describe design of transport layer
HW3.A: I don't think about sequence number and ack number in sender, receiver both sode. The reason is I think we don't need to ACK for segment because when sender send some segment, then sender know receiver recv this segment naturally. So when recv data from app layer, send to network with header. Or recv segment from network layer, send to app layer just payload. This is design of my transport layer with reliable network.
HW3.B: First, implement 3-way handshaking with constant timeout value. When finish 3-way handshaking, they start to data each other. First, At sender side, when recv data from app layer, first check that this data is not exceed window size. If there is a margin, save at sender buffer and send to network with appropriate header. we use next_seq_num for header.th_seq and purpose of save data is retransmitt when timeout occured. Also, When recv ACK data from network layer, check ack number with send_base. if ack number is bigger than send_base, move sand_base for moving window. if that is smaller, than ignore that segment. Now, At receiver side, recv data from network layer, check sequence number with expect_seq_num, and save at receiver buffer. Purpose of save data is send to app layer at same time if there is any series of data start with expect seqeunce number like selective repeat. When save data at buffer and save seq number in array, we should sort according to size for check series data or not later. Then, 4-way closing start. I use clock function for estimate timeout, and retransmitt FIN or ACK for closing. This is design of my transport layer with unreliable network. 